name: Build and Push Docker Images to ECR

# Trigger the action when changes are pushed to the master branch
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the code from the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Log in to Amazon ECR using AWS credentials
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        region: ${{ secrets.AWS_REGION }}
        account-id: ${{ secrets.AWS_ACCOUNT_ID }}

    # Step 4: Build, tag, and push the WebApp Docker image
    - name: Build and push the webapp Docker image
      run: |
        # Define the ECR repository URI
        ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/webapp
        
        # Build the webapp image
        docker build -t webapp .
        
        # Tag the image for ECR
        docker tag webapp:latest $ECR_URI:latest
        
        # Push the image to ECR
        docker push $ECR_URI:latest

    # Step 5: Build, tag, and push the MySQL Docker image
    - name: Build and push the MySQL Docker image
      run: |
        # Define the ECR repository URI
        ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/mysql
        
        # Pull the official MySQL image
        docker pull mysql:latest
        
        # Tag the image for ECR
        docker tag mysql:latest $ECR_URI:latest
        
        # Push the image to ECR
        docker push $ECR_URI:latest
